# BaseecosObj: # This is page name
# root level object start with a upper case letter
EcosObj : 
  id : "" # base64 id
  name : "" # JSON string
  type : "0" # data type
  ctime : "0" # Unix_TimeStamp when data created.
Vertex: 
  .EcosObj : "" # inherit an object value only, not the key
  uid : ""
  pk : ""
  esk : ""
  deat : ""
# line 8,9 is equivelent to line 11 to 15
#  id : "" # base64 id
#  name : "" # JSON string
#  type : "0" # data type
#  ctime : "0" # Unix_TimeStamp when data created.
#  uid : ""

VertexAPI:
  get :
    api: rv
  store:
    api: cv
Edge:
  .EcosObj : ""
  subtype : ""
  bvid : ""
  evid : ""
  etime : ""

EdgeAPI:
  get:
    api: re
    xfname: bvid
    maxcount: "1"
  store: # create or update
    api: ce

Document:
  .EcosObj : ""
  eid : ""
  fid : ""

DocAPI:
  get: 
    api: rd
    ids: "" # 
    xfname: "" # default is "id", optional "eid", "fid"
    type: "0" # 0 data application data type 0 - 1023
    maxcount: "1" # default is 20, max 1000
  store:
    api: cd
    type:
      isOnServer: auto  # 0 server    1  S3
      isZipped: auto  # 0 not gziped  1  gziped
      isBinary: "0" # 0 Base64       1  binary
      isEncryped: "0"  #0 no         1  encryped
      isExtraKeyNeeded: "0"  #0 no   1  yes
      isEditable: "0"  #0  no        1  yes
      applicationDataType: "0"   #0 data
      mediaType: "0" # 0 others
      size: auto       

Message:
  avatar : "https://public.aitmed.com/avatar/JohnDoe.jpg"
  to: ""
  from : =.Global.currentUser.name.firstName # evaluate when access
  createDate : ""
  createTime : ""
  subject : "A Subject"
  content : "The message"
  applicationLink : ""

Const:
  w9 : "101"
  workComp : "102"
DataCache : 
  loadingDateTime : "0"
  expireTime : "24hr" # need reload

Global : # name of an object
  currentDateTime : =.builtIn.currentDateTime # long integer of Unix_TimeStamp in millsecond
  currentUser : 
    dataCache : 
      .DataCache: ""
      expireTime : "2hr"
    vertex: .Vertex
    JWT : ""
  contactList : 
    dataCache : 
      .DataCache: ""
      expireTime : "2hr"
    contacts :
      - .Edge
    get:
      .EdgeAPI.get : ""
      # get the object of Global.currentUser should not contain key started with a dot.
      dataKey: Global.contactList.contacts
      id: = .Global.currentUser.vertex.id # once Global is not able to be found, just keep it as raw string.
      # id: "xxxxx-aaaa-aaa"
      type : "10002"
      xfname : bvid
      sCondition : "subtype=1" # only for AiTmed platform  
      maxcount : "1000"
#      .edge.get :       #override {"get":{"api":"re","type":"10002", "xfname":"bvid", "scondition":"subtype=1", "maxcount":"1000"}}
  rootNotebook :
    edge:
      .Edge: ""
      type: "10000" #rootNotebook
      bvid: .Global.currentUser.vertex.id
    edgeAPI:
      .EdgeAPI: ""
      get:
        type : "10002"
        xfname : bvid
        dataKey: Global.rootNotebook.edge
      store:
        dataKey: Global.rootNotebook.edge

  meetroom: 
    edge: 
      .Edge: "" 
      type: "40000"
      name:
        roomName: "Exam Room 1"
        videoProvider: "twilio"
      bvid: .Global.currentUser.vertex.id 
      refid: ""  
      deat: 
        roomId: ""
        accessToken: ""  
        participents: ""
        lastTime: ""
    edgeAPI:
      .EdgeAPI: ""
      store:
        dataKey: Global.meetroom.edge    

  actingUser : # representing business identity
    DataCache :
      expireTime : "2hr"
    vertex : .Vertex
      #get : # loginUser refer to the login page

Credential:
  patientUser:
    vertex:  # user from the database  
      .Vertex: ""
      type: "patient"  

SignIn:
    url: https://meet.aitmed.com/
SignUp:
    url: https://meet.aitmed.com/