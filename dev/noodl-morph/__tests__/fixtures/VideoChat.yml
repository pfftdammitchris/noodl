VideoChat:
  pageNumber: '190'
  init:
    - .SignInCheck
    - actionType: evalObject
      object:
        ..rootRoomInfo.edge.tage@: 0
    - ..save
    - actionType: evalObject
      object:
        .Global.rootRoomInfo.edge@: =..roomInfo.response.edge
    - actionType: builtIn
      funcName: videoChat
      roomId: ..roomInfo.response.edge.deat.roomId
      accessToken: ..roomInfo.response.edge.deat.accessToken
      timer: .Global.timer

  cameraOn: 'true'
  micOn: 'true'
  miuAutoMicOffTimespan: '3' # seconds
  miuAutoMicOffThresdhold: '3' # mic volume calibrate between 0 to 9, <= 3 will turn micOff Automatically if user set the mic is on. Mic will not turn on automatically within the minAutoMicOffTimespan even a higher level of volumn detectec.
  faqTitle: .FAQs.title
  emptyId: ''
  save:
    - ..roomInfo.edgeAPI.store
  roomInfo:
    response: ''
    edge:
    edgeAPI:
      .EdgeAPI: ''
      store:
        api: ce
        dataIn: roomInfo.edge # return result should updated to roomInfo.edge as well
        dataOut: roomInfo.response
  listData:
    participants:
      - .Edge:
    get:
      .EdgeAPI.get: ''
      api: re
      dataKey: listData.participants
      id: .MeetingLobbyStart.rootRoom.edge.id
      type: '40000'
      xfname: refid
      #sCondition: "tage=0 AND ctime>UNIX_TIMESTAMP()-7200"
      sCondition: 'tage=0 AND ctime>UNIX_TIMESTAMP()-86400'
      maxcount: '20'
  popUpList:
    - text: 'Meeting Lobby'
      pageName: 'ManageMeeting'
    - text: 'Shared Documents'
      pageName: 'MeetingDocumentsShared'
  components:
    - type: register
      onEvent: twilioOnPeopleJoin
      actions:
        - actionType: builtIn
          funcName: hide
          viewTag: waitForOtherTag
    - type: register
      onEvent: twilioOnNoParticipant
      actions:
        - actionType: builtIn
          funcName: show
          viewTag: waitForOtherTag
    - type: view
      children:
        - type: image
          path: waitingroom.png
        - type: view
          viewTag: mainStream
          style:
            left: '0'
            backgroundColor: '0x00000000'
        - type: view
          viewTag: selfStream
          style:
            backgroundColor: '0x00000000'
        - type: view
          children:
            - type: label
              dataKey: roomInfo.edge.name.roomName
        - type: image
          path: logo.png
          viewTag: waitForOtherTag
          style:
            border:
              style: '5'
          borderRadius: 32
        - type: label
          contentType: hidden # passwordHidden
          viewTag: waitForOtherTag
          text: 'Waiting for others to join'
        - type: list # hardcoded listObject
          contentType: videoSubStream # listObject
          listObject: '' # provide by twilio API ..listData.participants # to dataObject to enumerate the list
          iteratorVar: itemObject
          style:
            axis: horizontal
          children:
            - type: listItem
              itemObject: ''
              style:
                border:
                  style: '1'
              children:
                - type: view
                  viewTag: subStream
                  style:
                    left: '0.015'
                    top: '0'
                    borderRadius: '5'
        - type: view
          style:
            left: '0'
            backgroundColor: '0x000000'
            position: 'fixed'
          children:
            - type: image
              viewTag: camera
              path:
                emit:
                  actions:
                    - if:
                        - =.VideoChat.cameraOn
                        - https://public.aitmed.com/commonRes/cameraOn.png
                        - https://public.aitmed.com/commonRes/cameraOff.png
              onClick:
                - emit:
                    actions:
                      - if:
                          - =.VideoChat.cameraOn
                          - .VideoChat.cameraOn@: false
                          - .VideoChat.cameraOn@: true
                - actionType: builtIn
                  funcName: redraw
                  viewTag: camera
                - actionType: builtIn
                  funcName: toggleFlag
                  dataKey: VideoChat.cameraOn
            - type: image
              viewTag: microphone
              path:
                emit:
                  actions:
                    - if:
                        - =.VideoChat.micOn
                        - https://public.aitmed.com/commonRes/micOn.png
                        - https://public.aitmed.com/commonRes/micOff.png
              onClick:
                - emit:
                    actions:
                      - if:
                          - =.VideoChat.micOn
                          - .VideoChat.micOn@: false
                          - .VideoChat.micOn@: true
                - actionType: builtIn
                  funcName: redraw
                  viewTag: microphone
                - actionType: builtIn
                  funcName: toggleFlag
                  dataKey: VideoChat.micOn
            - type: image
              path: hangUp.png
              onClick:
                - actionType: popUp
                  popUpView: confirmView
              style:
                backgroundColor: '0xd81e06'
                border:
                  style: '3'
                  width: '1'
                borderRadius: '100'
            - type: view
              onClick:
                - actionType: popUp
                  popUpView: selectView
                  dismissOnTouchOutside: true
              children:
                - type: image
                  path: NavIcMore.png
            - type: label
              contentType: timer
              text=func: =.builtIn.string.formatTimer
              dataKey: Global.timer
    - type: popUp # view
      viewTag: confirmView
      children:
        - type: view
          style:
            backgroundColor: '0xeeeeeeff'
            border:
              style: '5'
          children:
            - type: label
              text: 'LEAVING MEETING...'
              style:
                .LabelStyle:
                  left: '0.05'
                  top: '0.02'
                  fontWeight: '500'
                  display: inline
                  textAlign:
                    x: center
                    y: center
            - type: label
              text: 'Close this meeting room?'
            - type: label
              text: 'Closing the room will generate a Summary for each participant.'
            - type: label
              text: 'If you desire to return to this meeting, keep this room open'
            - type: divider
              style:
                .DividerStyle:
                  left: '0'
                  top: '0.25436'
                  width: '0.8'
                  height: '0.001'
                  backgroundColor: '0x00000088'
            - type: button
              onClick:
                - actionType: popUpDismiss
                  popUpView: confirmView
                - actionType: evalObject
                  object:
                    ..roomInfo.edge.id@: =..roomInfo.response.edge.id
                - actionType: evalObject
                  object:
                    ..roomInfo.edge.tage@: 1
                - actionType: saveObject
                  object: ..save
                - actionType: evalObject
                  object:
                    .Global._nonce@:
                      =.builtIn.math.random: ''
                - goto: MeetingRoomHistory
            - type: button
              onClick:
                - actionType: evalObject
                  object:
                    ..roomInfo.edge.id@: =..roomInfo.response.edge.id
                - actionType: evalObject
                  object:
                    ..roomInfo.edge.tage@: -1
                - actionType: saveObject
                  object: ..save
                - actionType: evalObject
                  object:
                    .Global.rootRoomInfo.edge@: =..roomInfo.response.edge
                - actionType: evalObject
                  object:
                    .Global._nonce@:
                      =.builtIn.math.random: ''
                - goto: MeetingSummary
              text: Close Meeting
              style:
                .LabelStyle:
                  left: '0.4'
                  top: '0.275'
                  width: '0.4'
                  height: '0.06812'
                  color: '0x388eccff'
                  fontSize: '17'
                  display: inline
                  textAlign:
                    x: center
                    y: center
                  border:
                    style: '5'
                  borderRadius: '15'
    - type: popUp
      viewTag: selectView
      style:
        border:
          style: '3'
        borderColor: '0x000000'
        borderWidth: '1.5'
        borderRadius: '10'
      children:
        - type: list
          contentType: listObject
          listObject: ..popUpList
          iteratorVar: itemObject
          children:
            - type: listItem
              itemObject: ''
              onClick:
                emit:
                  dataKey:
                    var: itemObject
                  actions:
                    - if:
                        - true
                        - goto: $var.pageName
                        - goto: $var.pageName
              children:
                - type: label
                  dataKey: itemObject.text
                  style:
                    fontWeight: '500'
                    textAlign:
                      x: center
                    fontSize: '14'
